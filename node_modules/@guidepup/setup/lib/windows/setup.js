"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setup = void 0;
const getNvdaRegistryData_1 = require("./getNvdaRegistryData");
const isNvdaInstalled_1 = require("./isNvdaInstalled");
const createNvdaRegistryKey_1 = require("./createNvdaRegistryKey");
const installNvda_1 = require("./installNvda");
const updateNvdaRegistryData_1 = require("./updateNvdaRegistryData");
const removeForegroundLock_1 = require("./removeForegroundLock");
const restartExplorer_1 = require("./restartExplorer");
const path_1 = require("path");
async function setup() {
    const userProvidedInstallDirectoryFlagIndex = process.argv.indexOf("--nvda-install-dir");
    const userProvidedInstallDirectoryRaw = userProvidedInstallDirectoryFlagIndex > -1
        ? process.argv.at(userProvidedInstallDirectoryFlagIndex + 1) ?? null
        : null;
    const userProvidedInstallDirectory = userProvidedInstallDirectoryRaw
        ? (0, path_1.resolve)(userProvidedInstallDirectoryRaw)
        : null;
    const { exists, values } = await (0, getNvdaRegistryData_1.getNvdaRegistryData)();
    if ((0, isNvdaInstalled_1.isNvdaInstalled)({ exists, userProvidedInstallDirectory, values })) {
        return;
    }
    if (!exists) {
        await (0, createNvdaRegistryKey_1.createNvdaRegistryKey)();
    }
    const nvdaDirectory = await (0, installNvda_1.installNvda)({ userProvidedInstallDirectory });
    await (0, updateNvdaRegistryData_1.updateNvdaRegistryData)({ nvdaDirectory });
    await (0, removeForegroundLock_1.removeForegroundLock)();
    await (0, restartExplorer_1.restartExplorer)();
}
exports.setup = setup;
